#!/bin/bash
export WPFILE="$HOME/.tpwp"


function tp(){
VERSION="1.0.0.0"
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -v|--version)
            echo "$0 - $VERSION"
            return 0
    ;;
    -h|--help)
        #print help
        echo "USAGE : $0 [OPTIONS...] [waypoint] go to the waypoint stored in the waypoint list"
        echo "Options list:"
        echo "-v, --version                  show the version"
        echo "-h, --help                     print this help"
        echo "-l, --list                     display all registered waypoint"
        echo "-a, --add    waypoint [path=.] associate the path with waypoint to the waypoint list"
        echo "-r, --remove waypoint          remove the waypoint to the waypoint list"
        echo "-c, --clean                    remove all the existing waypoint from the waypoint list"
        return 0
    ;;
    -l|--list)
    # list
    if [ -f $WPFILE ]; then
        divider="=============================="
        header="\n %-10s | %8s\n"
        format=" %-10s | %8s\n"
        width=38

        printf "$header" "WAYPOINTS" "PATH"
     printf "%-10s\n" "$divider"
        cat $WPFILE | while read key value; do
             printf "$format" $key $value
        done
        echo ""
    else
        echo "No waypoint saved! try to register a waypoint with:"
        echo "tp --add [waypoint]"
        echo "help with tp --help"
        return 1
    fi
    return 0
    ;;
    -c|--clear)
     rm $WPFILE
     return 0
    ;;
    -a|--add)
    #add
    shift
    `$0 -r $1`
    DIR=`pwd`
    if [ ! -z "$2" ]; then
        DIR=$2
    fi
    echo "$1 $DIR">>$WPFILE
    return 0
;;
    -r|--remove)
    #remove
    shift
    if [ -f $WPFILE ]; then
         mv $WPFILE $WPFILE.bak
            cat $WPFILE.bak | while read key value; do
                line="$key $value"
                if [ "$key" != "$1" ]; then
                    echo "$line" >> $WPFILE
                fi
            done
        rm $WPFILE.bak
    fi
    return 0
;;
*)
#DO TP
    if [ -f $WPFILE ]; then
        cat $WPFILE | while read key value; do
             if [[ $key = $1 ]]; then
                cd $value
                return 0
             fi
        done
    fi
    echo "$0 should have a registered waypoint $1 try to add it with:"
    echo "$0 --add $1"
    return 0
;;
esac
done
tp -h
return 1
}

function _list_tpkey()
{ 
    VAR=""
    cat $WPFILE | while read key value; do
            VAR="$VAR ${key}[$value]"
    done
    echo "$VAR"
}

compdef _tp tp
function _tp(){

 _arguments "-v[show the version]" "--version[show the version]" \
            "-h[print help]" "--help[print help]" \
            "-c[remove all the existing waypoint from the waypoint list]" "--clean[remove all the existing waypoint from the waypoint list]" \
            "-l[display all registered waypoint]" "--list[display all registered waypoint]" \
            "-a[associate the path with waypoint to the waypoint list]:filename:->add" "--add[associate the path with waypoint to the waypoint list]:filename:->add" \
            "-r[remove the waypoint to the waypoint list]:filename:->remove" "--remove[remove the waypoint to the waypoint list]:filename:->remove" ":arg:->waypoint"
case "$state" in
    remove|waypoint)
        _values "waypoint path" $( _list_tpkey )
    ;;
    add)
        _describe " waypoint [OPTIONAL_PATH = (current bash dir by default)]"
    ;;
esac
}