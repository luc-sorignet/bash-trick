#!/bin/bash
export WPFILE="$HOME/.tpwp"


function tp(){
APPNAME="tp"
VERSION="1.0.0.0"
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -v|--version)
            echo "$APPNAME - $VERSION"
            return 0
    ;;
    -h|--help)
        #print help
        echo "USAGE : $APPNAME [OPTIONS...] [waypoint] go to the waypoint stored in the waypoint list"
        echo "Options list:"
        echo "-v, --version                show the version"
        echo "-h, --help                   print this help"
        echo "-a, --add    [waypoint]      add the current directory with waypoint to the waypoint list"
        echo "-r, --remove [waypoint]      remove the waypoint to the waypoint list"
        echo "-c, --clean                  remove all the existing waypoint from the waypoint list"
        return 0
    ;;
    -l|--list)
    # list
    if [ -f $WPFILE ]; then
        divider="=============================="
        header="\n %-10s | %8s\n"
        format=" %-10s | %8s\n"
        width=38

        printf "$header" "WAYPOINTS" "PATH"
     printf "%-10s\n" "$divider"
        cat $WPFILE | while read key value; do
             printf "$format" $key $value
        done
        echo ""
    else
        echo "No waypoint saved! try to register a waypoint with:"
        echo "tp --add [waypoint]"
        echo "help with tp --help"
    fi
    return 0
    ;;
    -c|--clear)
     rm $WPFILE
     return 0
    ;;
    -a|--add)
    #add
    shift
    tp -r $1
    echo "$1 `pwd`">>$WPFILE
    return 0
;;
    -r|--remove)
    #remove
    shift
    if [ -f $WPFILE ]; then
         mv $WPFILE $WPFILE.bak
            cat $WPFILE.bak | while read key value; do
                line="$key $value"
                if [ "$key" != "$1" ]; then
                    echo "$line" >> $WPFILE
                fi
            done
        rm $WPFILE.bak
    fi
    return 0
;;
*)
#DO TP
    if [ -f $WPFILE ]; then
        cat $WPFILE | while read key value; do
             if [[ $key = $1 ]]; then
                cd $value
                return 0
             fi
        done
    fi
    echo "tp should have a registered waypoint |$1| try to add it with:"
    echo "tp --add $1"
    return 0
;;
esac
done
tp -h
}



